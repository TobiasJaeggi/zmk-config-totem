#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <locale/keys_de_swiss.h>
#include <zmk-helpers/helper.h>
#include <zmk-helpers/key-labels/totem.h>

//                                      "zmk-helpers/key-labels/totem.h"
//
//    ┌────────────────────┬────────────────────┐        ┌──────────────────────┬─────────────────────┐
//    │  0   1   2   3   4 │  5   6   7   8   9 │        │  LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
// ┌──┘ 10  11  12  13  14 │ 15  16  17  18  19 └───┐ ┌──┘  LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 └───┐
// │ 20 21  22  23  24  25 │ 26  27  28  29  30  31 │ │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
// └──────────┐ 32  33  34 │ 35  36  37 ┌───────────┘ └──────────┐  LH2 LH1 LH0 │ RH0 RH1 RH2 ┌───────────┘
//            └────────────┴────────────┘                        └──────────────┴─────────────┘
//

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
};

// Homerow mods
#define KEYS_LEFT LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_RIGHT RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

// left-hand HRMs
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>; // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
    hold-trigger-on-release; // delay positional check until key-release
)

// right-hand HRMs
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>; // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
    hold-trigger-on-release; // delay positional check until key-release
)

/ {
    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&caps_word>;
            key-positions = <LB5 RB5>;
            layers = <0>;
            timeout-ms = <70>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <LH1 RH1>;
            layers = <0>;
            timeout-ms = <70>;
        };
    };

    behaviors {
        swap: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <LB5>; // ignored key position must match LS(TAB) index
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "base";
            bindings = <
//                   ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐     ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐
                      &kp Q              &kp W              &kp E              &kp R              &kp T                    &kp DE_Z           &kp U              &kp I              &kp O              &kp P
//                   ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤
                      &hml LGUI A        &hml LALT S        &hml LCTRL D       &hml LSHFT F       &kp G                    &kp H              &hmr RSHFT J       &hmr RCTRL K       &hmr RALT L        &hmr RGUI INS
//┌──────────────────┬──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┐
   &kp LSHIFT         &kp DE_Y           &kp X              &kp C              &kp V              &kp B                    &kp N              &kp M              &kp DE_COMMA       &kp DE_PERIOD      &kp ESCAPE         &kp RSHIFT
//└──────────────────┴──────────────────┴──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┴──────────────────┴──────────────────┴──────────────────┘
                                                            &kp LEFT_ALT       &kp BACKSPACE      &mo 1                    &mo 2              &kp SPACE          &kp RCTRL
//                                                         └──────────────────┴──────────────────┴──────────────────┘     └──────────────────┴──────────────────┴──────────────────┘
            >;
        };

        Navigation {
            label = "nav";
            bindings = <
//                   ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐     ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐
                      &kp PRINTSCREEN    &kp HOME           &kp UP_ARROW       &kp END            &kp PAGE_UP              &kp KP_NUMLOCK     &kp KP_N7          &kp KP_N8          &kp KP_N9          &kt SCROLLLOCK
//                   ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤
                      &none              &kp LEFT           &kp DOWN           &kp RIGHT_ARROW    &kp PAGE_DOWN            &none              &kp KP_N4          &kp KP_N5          &kp KP_N6          &kp LEFT_GUI
//┌──────────────────┬──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┐
   &kp LS(TAB)        &none              &none              &kp LC(C)          &kp LC(V)          &none                    &kp KP_NUMBER_0    &kp KP_N1          &kp KP_N2          &kp KP_N3          &to 0              &swap
//└──────────────────┴──────────────────┴──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┴──────────────────┴──────────────────┴──────────────────┘
                                                            &trans             &kp BACKSPACE      &trans                   &trans             &kp TAB            &trans
//                                                         └──────────────────┴──────────────────┴──────────────────┘     └──────────────────┴──────────────────┴──────────────────┘
            >;
        };

        Symbols {
            label = "sym";
            bindings = <
//                   ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐     ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐
                      &kp DE_MINUS       &kp DE_PLUS        &kp DE_QMARK       &kp DE_EXCL        &kp DE_PIPE              &kp DE_EQUAL       &mt DE_U_UMLAUT DE_ASTERISK  &kp DE_AMPERSAND  &mt DE_O_UMLAUT DE_GRAVE  &kp DE_CARET
//                   ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤
                      &mt DE_A_UMLAUT DE_LT  &kp DE_LBKT    &kp DE_LBRC        &kp DE_LPAR        &kp DE_BACKSLASH         &kp DE_SLASH       &kp DE_RPAR        &kp DE_RBRC        &kp DE_RBKT        &kp DE_GT
//┌──────────────────┬──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┐
   &trans             &kp DE_TILDE       &kp DE_DOLLAR      &kp DE_PERCENT     &kp DE_HASH        &kp DE_SQT               &kp DE_DQT         &kp DE_AT_SIGN     &none              &none              &to 0              &trans
//└──────────────────┴──────────────────┴──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┴──────────────────┴──────────────────┴──────────────────┘
                                                            &trans             &kp DELETE         &trans                   &trans             &kp SPACE          &trans
//                                                         └──────────────────┴──────────────────┴──────────────────┘     └──────────────────┴──────────────────┴──────────────────┘
            >;
        };

        misc {
            label = "misc";
            bindings = <
//                   ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐     ┌──────────────────┬──────────────────┬──────────────────┬──────────────────┬──────────────────┐
                      &bt BT_SEL 1       &none              &kp C_BRI_UP       &kp K_VOL_UP       &kp C_NEXT               &kp F12            &kp F7             &kp F8             &kp F9             &none
//                   ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤
                      &bt BT_SEL 2       &none              &kp C_BRI_DN       &kp K_VOL_DN       &kp C_PREV               &kp F11            &kp F4             &kp F5             &kp F6             &none
//┌──────────────────┬──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┼──────────────────┐
   &bt BT_CLR         &bt BT_SEL 3       &none              &none              &none              &kp K_PLAY_PAUSE         &kp F10            &kp F1             &kp F2             &kp F3             &to 0              &none
//└──────────────────┴──────────────────┴──────────────────┼──────────────────┼──────────────────┼──────────────────┤     ├──────────────────┼──────────────────┼──────────────────┴──────────────────┴──────────────────┴──────────────────┘
                                                            &trans             &none              &trans                   &trans             &none              &trans
//                                                         └──────────────────┴──────────────────┴──────────────────┘     └──────────────────┴──────────────────┴──────────────────┘
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        go_to_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
