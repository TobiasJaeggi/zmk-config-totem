//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <locale/keys_de_swiss.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <20 31>;
            layers = <0>;
            timeout-ms = <70>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <36 33>;
            layers = <0>;
            timeout-ms = <70>;
        };
    };

    behaviors {
        swap: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <21>; // ignored key position must match LS(TAB) index
        };
    };


    keymap {
        compatible = "zmk,keymap";

        base {
            label = "base";
            bindings = <
                &kp Q              &kp W  &kp E         &kp R          &kp T    &kp Y  &mt DE_U_UMLAUT U  &kp I         &mt DE_O_UMLAUT O  &kp P
                &mt DE_A_UMLAUT A  &kp S  &kp D         &kp F          &kp G    &kp H  &kp J              &kp K         &kp L              &mt LEFT_GUI INS
&kp LEFT_SHIFT  &kp Z              &kp X  &kp C         &kp V          &kp B    &kp N  &kp M              &kp DE_COMMA  &kp DE_PERIOD      &kp ESCAPE        &kp RSHFT
                                          &kp LEFT_ALT  &kp BACKSPACE  &mo 1    &mo 2  &kp SPACE          &kp RCTRL
            >;
        };

        Navigation {
            label = "nav";
            bindings = <
        &kp PRINTSCREEN  &kp HOME  &kp UP_ARROW  &kp END          &kp PAGE_UP      &kp KP_NUMLOCK   &kp KP_N7  &kp KP_N8  &kp KP_N9  &kt SCROLLLOCK
        &none            &kp LEFT  &kp DOWN      &kp RIGHT_ARROW  &kp PAGE_DOWN    &kp ENTER        &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp LEFT_GUI
&trans  &kp LS(TAB)      &swap     &kp LC(C)     &kp LC(V)        &none            &kp KP_NUMBER_0  &kp KP_N1  &kp KP_N2  &kp KP_N3  &to 0           &trans
                                   &trans        &kp BACKSPACE    &trans           &trans           &kp TAB    &trans
            >;
        };

        Symbols {
            label = "sym";
            bindings = <
        &mt DE_UNDERSCORE DE_MINUS  &kp DE_PLUS          &kp DE_QUESTION    &kp DE_EXCLAMATION       &kp DE_PIPE            &kp DE_EQUAL          &kp DE_ASTERISK           &kp DE_AMPERSAND    &kp DE_GRAVE          &kp DE_CARET
        &kp DE_LESS_THAN            &kp DE_LEFT_BRACKET  &kp DE_LEFT_BRACE  &kp DE_LEFT_PARENTHESIS  &kp DE_BACKSLASH       &kp DE_SLASH          &kp DE_RIGHT_PARENTHESIS  &kp DE_RIGHT_BRACE  &kp DE_RIGHT_BRACKET  &kp DE_GREATER_THAN
&trans  &kp DE_TILDE                &kp DE_DOLLAR        &kp DE_PERCENT     &kp DE_HASH              &kp DE_SINGLE_QUOTE    &kp DE_DOUBLE_QUOTES  &kp DE_AT_SIGN            &none               &none                 &to 0                &trans
                                                         &trans             &kp DELETE               &trans                 &trans                &kp SPACE                 &trans
            >;
        };

        misc {
            label = "misc";
            bindings = <
       &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_MAXIMUM  &kp K_VOLUME_UP      &kp F12  &kp F7  &kp F8  &kp F9  &none
       &none                  &kp K_BACK                &kp C_BRIGHTNESS_DEC  &kp K_FORWARD             &kp K_VOLUME_DOWN    &kp F11  &kp F4  &kp F5  &kp F6  &to 4
&none  &kp K_STOP             &kp K_PREVIOUS            &kp K_PLAY_PAUSE      &kp K_NEXT                &kp K_MUTE           &kp F10  &kp F1  &kp F2  &kp F3  &to 0  &none
                                                        &trans                &none                     &trans               &trans   &none   &trans
            >;
        };

        bluetooth {
            bindings = <
        &trans  &trans      &trans  &trans      &trans    &trans  &kp N7  &kp N8  &kp N9  &trans
        &trans  &bt BT_PRV  &trans  &bt BT_NXT  &trans    &trans  &kp N4  &kp N5  &kp N6  &trans
&trans  &trans  &trans      &trans  &trans      &trans    &kp N0  &kp N1  &kp N2  &kp N3  &trans  &trans
                            &trans  &trans      &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        go_to_3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
